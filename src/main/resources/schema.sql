DROP TABLE IF EXISTS USERS CASCADE;
DROP TABLE IF EXISTS friends CASCADE;
DROP TABLE IF EXISTS FILMS CASCADE;
DROP TABLE IF EXISTS likes CASCADE;
DROP TABLE IF EXISTS GENRES CASCADE;
DROP TABLE IF EXISTS MPA CASCADE;
DROP TABLE IF EXISTS film_genre CASCADE;

CREATE TABLE IF NOT EXISTS MPA (
  rating_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  rating_name varchar(10) NOT NULL
);

CREATE TABLE IF NOT EXISTS FILMS (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(125) NOT NULL,
  description varchar(200) NOT NULL,
  release_date date NOT NULL,
  duration integer NOT NULL,
  rating_id integer REFERENCES MPA(rating_id),
  CHECK(duration > 0)
);

CREATE TABLE IF NOT EXISTS GENRES (
  genre_id integer AUTO_INCREMENT PRIMARY KEY,
  genre_name varchar(50)
);

CREATE TABLE IF NOT EXISTS film_genre (
  film_id integer NOT NULL,
  genre_id integer NOT NULL,
  constraint PK_film_genre primary key(film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS USERS (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  email varchar(70) NOT NULL,
  login varchar(50) NOT NULL,
  name varchar(30) NOT NULL,
  birthday date,
  CHECK(birthday < CAST(now() AS DATE))
);

CREATE TABLE IF NOT EXISTS friends (
  user_id integer REFERENCES USERS(id) NOT NULL,
  friend_id integer REFERENCES USERS(id) NOT NULL
);

CREATE TABLE IF NOT EXISTS likes (
  film_id integer,
  user_id integer REFERENCES USERS(id) NOT NULL
);